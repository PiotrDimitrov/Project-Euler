/*
   Triangle, pentagonal, and hexagonal numbers are generated by the following
   formulae:

   Triangle    T[n]=n(n+1)/2   1, 3, 6, 10, 15, ...
   Pentagonal  P[n]=n(3n−1)/2  1, 5, 12, 22, 35, ...
   Hexagonal   H[n]=n(2n−1)    1, 6, 15, 28, 45, ...

   It can be verified that T[285] = P[165] = H[143] = 40755.

   Find the next triangle number that is also pentagonal and hexagonal.
 */
#include <cmath>

namespace pr45{
    bool isTriangle(unsigned long long x){
        unsigned long long n = (-1 + sqrt(1 + 8*x)) / 2;
        auto t_n = n * (n+1) / 2;
        return t_n == x;
    }
    bool isPentagonal(unsigned long long x)
    {
        unsigned long long n = (1 + sqrt(24*x + 1)) / 6;
        auto p_n = n * (3 * n - 1) / 2;
        return p_n == x;
    }
    bool isHexagonal(unsigned long long x){
        unsigned long long n = (1 + sqrt(1 + 8*x)) / 4;
        auto h_n = n * (2 * n - 1);
        return h_n == x;
    }
}

int problem45() {
    for (int n = 144; n < 1000000; n++){
        int hex = n*(2*n - 1);
        if (pr45::isTriangle(hex) && pr45::isPentagonal(hex)){
            return hex;
        }
    }
    return -1;
}